!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=t(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}var r=function(){return t=function t(e,r,o,i,a,u,c){var l,s,f,p=e.name,d=e.link,y=e._id,m=e.isLiked;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),l=this,f=void 0,(s=n(s="$"))in l?Object.defineProperty(l,s,{value:f,enumerable:!0,configurable:!0,writable:!0}):l[s]=f,this._name=p,this._link=d,this._id=y,this._isLiked=m,this._cardSelector=r,this._confirmPopup=a,this._handleImageClick=o,this._handleDeleteClick=i,this._handleLikeCard=u,this._handleUnlikeCard=c},(r=[{key:"_getID",value:function(){return console.log("Getting ID:",this._id),this._id}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var t=this;this._likeButton=this._element.querySelector(".card__like-button"),this._cardImage=this._element.querySelector(".card__image"),this._trashButton=this._element.querySelector(".card__delete-button"),this._isLiked&&this._likeButton.classList.add("card__like-button_active"),this._likeButton&&this._likeButton.addEventListener("click",(function(){t._handleLikeCard(t._getID(),t._likeButton)})),this._trashButton&&this._trashButton.addEventListener("click",(function(){var e=t._getID();console.log("Trash Button: Opening confirm popup for ID:",e),console.log("Trash Button: Card element:",t._element),t._confirmPopup.open(t._id,t._element)}))}},{key:"_handleLikeCard",value:function(){var t=this;console.log("Liking card with ID: ".concat(this._getID)),api.likeCard(this._getID()).then((function(){return t._likeButton.classList.add("card__like-button_active")})),api.getCardById(this._id).then((function(t){console.log("Fetched updated card data:",t)})).catch((function(t){return console.error("Error liking card:",t)}))}},{key:"_handleUnlikeCard",value:function(){var t=this;console.log("Unliking card with ID: ".concat(this._getID)),api.dislikeCard(this._getID()).then((function(){return t._likeButton.classList.remove("card__like-button_active")})).catch((function(t){return console.error("Error unliking card:",t)}))}},{key:"_handleDeleteButton",value:function(){console.log("Deleting Card ID:",this._getID()),this._handleDeleteClick(this._getID(),this._element)}},{key:"createCard",value:function(){var t=this;this._element=this._getTemplate(),this._element.querySelector(".card__title").textContent=this._name;var e=this._element.querySelector(".card__image");return e.addEventListener("click",(function(){t._handleImageClick(t._link,t._name)})),e.src=this._link,e.alt=this._name,this._setEventListeners(),this._element}}])&&e(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,r}(),o=r;function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,c(r.key),r)}}function u(t,e,n){return(e=c(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t){var e=function(t){if("object"!=i(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==i(e)?e:e+""}var l=function(){return t=function t(e,n){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),u(this,"toggleButtonState",(function(){r._hasInvalidInput()?r.disableButton():(r._submitButton.classList.remove(r._settings.inactiveButtonClass),r._submitButton.disabled=!1)})),u(this,"disableButton",(function(){r._submitButton.classList.add(r._settings.inactiveButtonClass),r._submitButton.disabled=!0})),this._settings=e,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)},(e=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var t=this;this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t.toggleButtonState()}))})),this.toggleButtonState()}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_showInputError",value:function(t,e){var n=this._formElement.querySelector("#".concat(t.id,"-error"));t.classList.add(this._settings.inputErrorClass),n.textContent=e,n.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(t){var e=this._formElement.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._settings.inputErrorClass),e.classList.remove(this._settings.errorClass),e.textContent=""}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"resetValidation",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInputError(e)})),this.toggleButtonState()}}])&&a(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}(),s=l;function f(t){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},f(t)}function p(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,d(r.key),r)}}function d(t){var e=function(t){if("object"!=f(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==f(e)?e:e+""}var y=function(){return t=function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=r,this.renderer=o,this._container=document.querySelector(n)},(e=[{key:"renderItems",value:function(){var t=this;this._items.forEach((function(e){t.renderer(e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&p(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function v(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,b(r.key),r)}}function b(t){var e=function(t){if("object"!=m(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==m(e)?e:e+""}var h=function(){return t=function t(e){var n=e.popupSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=document.querySelector(n),this._handleEscClose=this._handleEscClose.bind(this)},(e=[{key:"open",value:function(){console.log("Opening modal:",this._popupElement),this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._popupElement.addEventListener("mousedown",(function(e){(e.target.classList.contains("modal__overlay")||e.target.classList.contains("modal__close"))&&t.close()}))}}])&&v(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,S(r.key),r)}}function S(t){var e=function(t){if("object"!=_(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==_(e)?e:e+""}function k(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(k=function(){return!!t})()}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=w(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},E.apply(null,arguments)}function w(t){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},w(t)}function j(t,e){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},j(t,e)}var O=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=function(t,e,n){return e=w(e),function(t,e){if(e&&("object"==_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,k()?Reflect.construct(e,n||[],w(t).constructor):e.apply(t,n))}(this,e,[{popupSelector:t}]))._imageElement=n._popupElement.querySelector(".modal__preview-image"),n._captionElement=n._popupElement.querySelector(".modal__preview-caption"),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&j(t,e)}(e,t),n=e,r=[{key:"open",value:function(t){var n,r,o,i=t.name,a=t.link;this._imageElement.src=a,this._imageElement.alt=i,this._captionElement.textContent=i,(n=e,r=this,"function"==typeof(o=E(w(1&3?n.prototype:n),"open",r))?function(t){return o.apply(r,t)}:o)([])}}],r&&g(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(h);function P(t){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},P(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,L(r.key),r)}}function L(t){var e=function(t){if("object"!=P(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==P(e)?e:e+""}function I(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(I=function(){return!!t})()}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=T(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},B.apply(null,arguments)}function T(t){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},T(t)}function D(t,e){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},D(t,e)}var q=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=function(t,e,n){return e=T(e),function(t,e){if(e&&("object"==P(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,I()?Reflect.construct(e,n||[],T(t).constructor):e.apply(t,n))}(this,e,[{popupSelector:t}]))._handleFormSubmit=n,r._popupForm=r._popupElement.querySelector(".modal__form"),r._inputList=r._popupForm.querySelectorAll(".modal__input"),r._submitButton=r._popupForm.querySelector(".modal__button"),r._defaultSubmitBtnText=r._submitButton.textContent,r.setEventListeners(),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&D(t,e)}(e,t),n=e,r=[{key:"getForm",value:function(){return this._popupForm}},{key:"_getInputValues",value:function(){var t={};return this._inputList.forEach((function(e){t[e.name]=e.value})),t}},{key:"setInputValues",value:function(t){this._inputList.forEach((function(e){e.value=t[e.name]}))}},{key:"setEventListeners",value:function(){var t,n,r,o=this;this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),console.log("Button text before renderLoading:",o._submitButton.textContent),o.renderLoading(!0),console.log("Button text after renderLoading:",o._submitButton.textContent),o._handleFormSubmit(o._getInputValues()).then((function(){o.close()})).catch((function(t){console.error("Error during form submission:",t)})).finally((function(){console.log("Resetting button text in finally block..."),o.renderLoading(!1)}))})),(t=e,n=this,"function"==typeof(r=B(T(1&3?t.prototype:t),"setEventListeners",n))?function(t){return r.apply(n,t)}:r)([])}},{key:"renderLoading",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";console.log("renderLoading called. isLoading:",t),this._submitButton.textContent=t?e:this._defaultSubmitBtnText}}],r&&C(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(h);function U(t){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},U(t)}function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,x(r.key),r)}}function x(t){var e=function(t){if("object"!=U(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=U(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==U(e)?e:e+""}function R(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(R=function(){return!!t})()}function F(t,e,n,r){var o=V(N(1&r?t.prototype:t),e,n);return 2&r&&"function"==typeof o?function(t){return o.apply(n,t)}:o}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=N(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},V.apply(null,arguments)}function N(t){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},N(t)}function J(t,e){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},J(t,e)}var G=function(t){function e(t,n,r){var o;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(o=function(t,e,n){return e=N(e),function(t,e){if(e&&("object"==U(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,R()?Reflect.construct(e,n||[],N(t).constructor):e.apply(t,n))}(this,e,[{popupSelector:t}]))._handleConfirmation=n,o._handleFormSubmit=r,o._confirmButton=document.querySelector("#confirmation-modal-button"),o._submitButton=o._popupElement.querySelector(".modal__button"),o._defaultSubmitBtnText=o._submitButton.textContent,o._setEventListeners(),o}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&J(t,e)}(e,t),n=e,r=[{key:"_getID",value:function(){return console.log("Getting ID in PopupConfirmation Class:",this._id),this._id}},{key:"open",value:function(t,n){F(e,"open",this,3)([]),this.cardId=t,console.log("Opening confirm popup for ID in PopConfirmation.js:"),this.cardElement=n,console.log("Received cardElement in PopConfirmation.js:",n)}},{key:"close",value:function(){F(e,"close",this,3)([])}},{key:"setSubmitAction",value:function(t){this._handleFormSubmit=t}},{key:"_setEventListeners",value:function(){var t=this;F(e,"setEventListeners",this,3)([]),this._confirmButton.addEventListener("click",(function(){t._handleFormSubmit&&t._handleFormSubmit(),t.close()}))}},{key:"renderLoading",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";console.log("renderLoading called. isLoading:",t),this._submitButton.textContent=t?e:this._defaultSubmitBtnText}}],r&&A(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(h);function H(t){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},H(t)}function z(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,M(r.key),r)}}function M(t){var e=function(t){if("object"!=H(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==H(e)?e:e+""}var Y=function(){return t=function t(e){var n=e.nameSelector,r=e.jobSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameElement=document.querySelector(n),this._jobElement=document.querySelector(r),this._avatarElement=document.querySelector(o)},(e=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,job:this._jobElement.textContent,avatar:this._avatarElement.src}}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.job,r=t.avatar;this._nameElement.textContent=e,this._jobElement.textContent=n,this.setUserAvatar(r)}},{key:"setUserAvatar",value:function(t){this._avatarElement.src=t}}])&&z(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function $(t){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},$(t)}function K(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Q(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?K(Object(n),!0).forEach((function(e){W(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):K(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function W(t,e,n){return(e=Z(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function X(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,Z(r.key),r)}}function Z(t){var e=function(t){if("object"!=$(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=$(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==$(e)?e:e+""}var tt=function(){return t=function t(e){var n=e.baseUrl,r=e.token;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=n,this._headers={authorization:r,"Content-Type":"application/json"}},e=[{key:"_handleResponse",value:function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}},{key:"_request",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return e.headers=Q(Q({"Content-Type":"application/json"},this._headers),e.headers),fetch(t,e).then(this._handleResponse)}},{key:"getAppInfo",value:function(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}},{key:"getInitialCards",value:function(){return this._request("".concat(this._baseUrl,"/cards"),{method:"GET"})}},{key:"getUserInfo",value:function(){return this._request("".concat(this._baseUrl,"/users/me"),{method:"GET"})}},{key:"setUserInfo",value:function(t){var e=t.name,n=t.about;return console.log(JSON.stringify({name:e,about:n})),this._request("".concat(this._baseUrl,"/users/me"),{method:"PATCH",body:JSON.stringify({name:e,about:n})})}},{key:"addCard",value:function(t){var e=t.name,n=t.link;return console.log("addCard called with:",{name:e,link:n}),this._request("".concat(this._baseUrl,"/cards"),{method:"POST",body:JSON.stringify({name:e,link:n})})}},{key:"removeCard",value:function(t){return this._request("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE"})}},{key:"likeCard",value:function(t){return console.log("Card ID from likeCard Api.js card",t),this._request("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT"})}},{key:"dislikeCard",value:function(t){return this._request("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE"})}},{key:"updateAvatar",value:function(t){return console.log(JSON.stringify(t)),this._request("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",body:JSON.stringify({avatar:t})})}}],e&&X(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}(),et=new tt({baseUrl:"https://around-api.en.tripleten-services.com/v1",token:"29a0771b-e289-443d-a8da-6cea882e108e"});console.log("Before API Call");var nt=new Y({nameSelector:".profile__title",jobSelector:".profile__description",avatarSelector:".profile__image"});et.getUserInfo().then((function(t){nt.setUserInfo({name:t.name,job:t.about,avatar:t.avatar})}));var rt,ot={};rt={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_has-error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(rt.formSelector)).forEach((function(t){var e=new s(rt,t),n=t.getAttribute("name");ot[n]=e,e.enableValidation()}));var it=new q("#update-avatar-modal",(function(t){var e=t.avatarUrl;return et.updateAvatar(e).then((function(t){console.log("Avatar updated on server:",t.avatar),nt.setUserAvatar(t.avatar),it.close()})).catch((function(t){console.error("Error updating avatar:",t)}))}),(function(t){it.renderLoading(!0);var e=t.avatar;et.updateAvatar(e).then((function(t){console.log("Avatar URL:",t.avatar),nt.setUserAvatar(t.avatar),it.close(),ct.resetValidation()})).catch((function(t){console.error("Error Submitting Form: ".concat(t))})).finally((function(){console.log("Resetting button text"),it.renderLoading(!1)}))})),at=document.querySelector(".profile__edit-icon"),ut=it.getForm().getAttribute("name"),ct=ot[ut];ct?ct.disableButton():console.error('No validator found for form "'.concat(ut,'"')),it.setEventListeners(),at.addEventListener("click",(function(){it.open(),ct&&ct.resetValidation()}));var lt=new q("#profile-edit-modal",(function(t){return lt.renderLoading(!0),et.setUserInfo({name:t.title,about:t.description}).then((function(t){nt.setUserAvatar(t.avatar);var e=lt.getForm().getAttribute("name");ot[e].disableButton(),lt.close()})).catch((function(t){console.error("Error updating profile:",t)})).finally((function(){console.log("Resetting button text"),lt.renderLoading(!1)}))}));lt.setEventListeners(),document.querySelector("#profile-edit-button").addEventListener("click",(function(){var t=nt.getUserInfo(),e=t.name,n=t.job;lt.setInputValues({title:e,description:n}),lt.open();var r=lt.getForm().getAttribute("name");ot[r].resetValidation()}));var st=new q("#profile-add-modal",(function(t){var e={name:t.title,link:t.link};return st.renderLoading(!0,"Creating..."),et.addCard(e).then((function(t){console.log("Adding new card:",t);var e=pt(t);dt.addItem(e),st.close();var n=st.getForm().getAttribute("name");ot[n].disableButton()})).catch((function(t){console.error("Error adding card:",t)})).finally((function(){st.renderLoading(!1)}))}));document.querySelector(".profile__add-button").addEventListener("click",(function(){st.open()}));var ft=new O("#preview-modal");function pt(t){return new o(t,"#card-form",mt,vt,yt,bt,ht).createCard()}ft.setEventListeners();var dt,yt=new G("#delete-confirm-modal");function mt(t,e){ft.open({name:e,link:t})}function vt(t,e){console.log("Deleting card with ID:",t),yt.renderLoading(!0,"Deleting..."),et.removeCard(t).then((function(){console.log("Card successfully deleted from server"),e.remove(),yt.close(),console.log("Popup should close now")})).catch((function(t){return console.error("Failed to delete card:",t)})).finally((function(){yt.renderLoading(!1)}))}function bt(t,e){var n=e.classList.contains("card__like-button_active"),r=n?et.dislikeCard(t):et.likeCard(t);console.log("Attempting to ".concat(n?"remove":"add"," like for card ID: ").concat(t)),r.then((function(t){console.log("Server responded successfully:",t),e.classList.toggle("card__like-button_active")})).catch((function(t){console.error("Error ".concat(n?"removing":"adding"," like:"),t)}))}function ht(t){return et.dislikeCard(t)}yt.setEventListeners(),yt.setSubmitAction((function(){console.log("Yes button clicked - confirming delete"),vt(yt.cardId,yt.cardElement)})),et.getInitialCards().then((function(t){(dt=new y({items:t,renderer:function(t){var e=pt(t);dt.addItem(e)}},".card__list")).renderItems(),console.log("Cards:",t)})).catch((function(t){console.error("Error fetching cards:",t)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,